#include<iostream>
using namespace std;

void main()
{
	int a=1, b=2;

	//int형인 a와 b를 더하면 소수점이 없는 결과값에서 float로 들어가서 fAver를 출력해도 소수점이 없음
	//묵시적 형변환 예 - 컴퓨터가 알아서 자료형에 맞게 형변환 진행하는 것
	float fAver = a + b;
	cout << fAver;

	//명시적 형변환 예 - 사용자가 자료형을 직접 변경하라 지시하는 것
	//이렇게 한번에 해줘도 소수점이 안나옴- 이미 int형 끼리 연산이 끝난후 float형변환으로 변환했기 때문에
	fAver = float(a + b / 3);
	//소수점이 나오게 하려면
	fAver = float(a) + float(b);	
	cout << fAver;

	//***형변환에도 우선순위가 있음
	//묵시적인 경우
	//우선순위의 기준은 데이터손실율을 최소화하기 위한 것 ( long long은 정수형이라 실수형을 받으면 데이터손실이 일어남) 따라서, 실수형->정수형순으로 내려감
	//long double-> dobule -> float -> long long -> long, int -> short -> char , bool 
	
	//우선순위에 상관없이, 변수에 들어가는 데이터는 변수의 자료형기준으로 짤려서 들어감 

	//============================================================

	//***제 3의변수 없이 값 바꾸기
	int iA = 10, iB = 20;
	//XOR연산
	iA ^= iB;
	iB ^= iA;
	iA ^= iB;

	//============================================================

	//16진수 : 10진수 숫자를 16으로 나눈 나머지들
	//숫자앞에 0X를 붙이면 컴퓨터가 16진수로 받아들임
	//int a= 0X5A
	//8진수 :  10진수 숫자를 8으로 나눈 나머지들
	//숫자앞에 0을 붙이면 컴퓨터가 8진수로 받아들임
	//int a = 0132

	
	//10진수로 8~16까지
	//10진수 n진수로 계산할 때 8^0곱하기 그자리 숫자, 8^1곱하기 그자리 숫자.. 이것만 기억하면됨 
	//16진수
	/*
	0X08
	0X09
	0XA
	0XB
	0XC
	0XD
	0XE
	0XF
	0X10
	0X11
	0X12
	0X13
	0X14

	====
	8진수
	0010
	0011
	0012
	0013
	0014
	0015
	0016
	0017
	0020
	0021
	0022
	0023
	0024



	====



	*/





	

}